{"version":3,"sources":["components/AirtableIntegration.js","components/SpiderCanvas.js","App.js","reportWebVitals.js","index.js"],"names":["AirtableIntegration","_React$Component","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","value","handleChange","bind","assertThisInitialized","handleSubmit","inherits","createClass","key","event","setState","target","alert","preventDefault","react_default","a","createElement","onSubmit","React","Component","SpiderCanvas","undefined","airtableData","length","use_data","console","log","labels","_React$useState","useState","projects","map","each_pr","objectSpread","use_text","opacity","sprints","each_sp","todos","each_todo","_React$useState2","slicedToArray","st_projects","setStProjects","_React$useState3","selected","scale","x","y","_React$useState4","st_navigation","setStNavigation","design_params","core","x_c","window","innerWidth","y_c","innerHeight","design","spacing","projects_angle","sprints_angle","todos_angle","label_angle","colours","background","trace_unselected","trace_selected","showNodeText","e","id","includes","project","i","description","title","sprint","j","todo","k","hideNodeText","setTimeout","to_do","ReactKonva","width","height","onWheel","evt","stage","getStage","oldScale","scaleX","mousePointTo","getPointerPosition","newScale","deltaY","draggable","onDragStart","onDragEnd","scaleY","style","label","radius","stroke","polarToCartesian","text","fontSize","fill","verticalAlign","align","sp_angle","to_do_angle","startPoint","points","tension","onmouseenter","onmouseleave","wrap","this_project_angle","this_sprint_angle","endPoint","this_to_do_angle","r","theta","Math","cos","sin","_regeneratorRuntime","exports","Op","prototype","hasOwn","hasOwnProperty","defineProperty","obj","desc","$Symbol","Symbol","iteratorSymbol","iterator","asyncIteratorSymbol","asyncIterator","toStringTagSymbol","toStringTag","define","enumerable","configurable","writable","err","innerFn","outerFn","self","tryLocsList","protoGenerator","Generator","generator","create","context","Context","makeInvokeMethod","tryCatch","fn","arg","type","ContinueSentinel","GeneratorFunction","GeneratorFunctionPrototype","IteratorPrototype","getProto","NativeIteratorPrototype","values","Gp","defineIteratorMethods","forEach","method","_invoke","AsyncIterator","PromiseImpl","previousPromise","callInvokeWithMethodAndArg","resolve","reject","invoke","record","result","__await","then","unwrapped","error","Error","doneResult","delegate","delegateResult","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","done","methodName","return","TypeError","info","resultName","next","nextLoc","pushTryEntry","locs","entry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","push","resetTryEntry","completion","reset","iterable","iteratorMethod","isNaN","displayName","isGeneratorFunction","genFun","ctor","constructor","name","mark","setPrototypeOf","__proto__","awrap","async","Promise","iter","keys","val","object","reverse","pop","skipTempReset","prev","charAt","slice","stop","rootRecord","rval","exception","handle","loc","caught","hasCatch","hasFinally","finallyEntry","complete","finish","catch","thrown","delegateYield","populateUseData","_populateUseData","asyncToGenerator","_callee","longTermTable","sprintTable","todoTable","useData","_context","conviction","unassigned","select","all","records","fields","_rawJson","tmpProjDict","Name","Description","_loop","tmpSprintDict","Notes","find","_loop2","toDo","tmpToDoDict","_x","_x2","_x3","apply","arguments","App","Airtable","configure","endpointUrl","apiKey","process","base","setAirtableData","useEffect","table","components_AirtableIntegration","components_SpiderCanvas","reportWebVitals","onPerfEntry","Function","__webpack_require__","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","render","StrictMode","src_App"],"mappings":"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","file":"static/js/main.6451ff69.chunk.js","sourcesContent":["import React from 'react';\n\nclass AirtableIntegration extends React.Component {\n    constructor(props) {\n      super(props);\n      this.state = {value: ''};\n  \n      this.handleChange = this.handleChange.bind(this);\n      this.handleSubmit = this.handleSubmit.bind(this);\n    }\n  \n    handleChange(event) {\n      this.setState({value: event.target.value});\n    }\n  \n    handleSubmit(event) {\n      alert('A name was submitted: ' + this.state.value);\n      event.preventDefault();\n    }\n  \n    render() {\n      return (\n        <form onSubmit={this.handleSubmit}>\n          {/* <label>\n            Name:\n            <input type=\"text\" value={this.state.value} onChange={this.handleChange} />\n          </label>\n          <input type=\"submit\" value=\"Submit\" /> */}\n        </form>\n      );\n    }\n  }\nexport default AirtableIntegration;","import React from 'react';\nimport { Stage, Layer, Text, Circle, Line } from 'react-konva';\n\n\nconst SpiderCanvas = (props) => {\n  if (props === undefined) {\n    return\n  }\n  if (props.airtableData.length === 0) {\n    return\n  }\n  let use_data = props.airtableData;\n\n  console.log(use_data);\n  let labels = [\n    \"CONVICTION\",\n    \"LONG TERM / PROJECTS\",\n    \"SPRINTS / MILESTONES\",\n    \"TO-DO / TASKS\",\n  ]\n\n  /* POPULATE THE USEABLE AIRTABLE DATA WITH ADDITIONAL DOM ELEMENTS */\n  const [st_projects, setStProjects] = React.useState(\n    use_data.projects.map((each_pr) => (\n      {\n        ...each_pr,\n        \"use_text\": each_pr[\"title\"],\n        \"opacity\": .5,\n        \"sprints\": each_pr.sprints.map((each_sp) => (\n          {\n            ...each_sp,\n            \"use_text\": each_sp[\"title\"],\n            \"opacity\": .5,\n            \"todos\": each_sp.todos.map((each_todo) => (\n              {\n                ...each_todo,\n                \"use_text\": each_todo[\"title\"],\n                \"opacity\": .5,\n              }\n            ))\n          }\n        ))\n      })));\n\n  /* CREATE A STATE TO HANDLE NAVIGATION OF THE CANVAS */\n  const [st_navigation, setStNavigation] = React.useState({\n    selected: null,\n    scale: 1,\n    x: 0,\n    y: 0\n  });\n\n  /* DEFINE SOME CANVAS DESIGN ELEMENTS (ANGLES, COLOURS, ETC.) */\n  const design_params = {\n    \"core\": {\n      \"x_c\": window.innerWidth / 2,\n      \"y_c\": window.innerHeight / 2\n    },\n    \"design\": {\n      \"spacing\": 200,\n      \"projects_angle\": 2 * 3.1415, // All projects will be split evenly between this span (should be 360d)\n      \"sprints_angle\": 2 * 3.1415 / 8, // All sprints will be split evenbly between this span\n      \"todos_angle\": 2 * 3.1415 / 36, // All todos will be seperated by this span (NOT THE SAME AS ABOVE!)\n      \"label_angle\": 2 * 3.1415 / 8\n    },\n    \"colours\": {\n      \"background\": \"white\",\n      \"trace_unselected\": \"#8899dd\",\n      \"trace_selected\": \"#1122ff\"\n    }\n  }\n\n  /* HELPER FUNCTIONS */\n  function polarToCartesian(r, theta) {\n    let x = r * Math.cos(theta);\n    let y = r * Math.sin(theta);\n    return [x, y];\n  }\n\n  /* INTERACTION FUNCTIONS */\n  const showNodeText = (e) => {\n    if (e.target.id().includes(\"pr_node_\")) {\n      setStProjects(\n        st_projects.map((project, i) => {\n          return {\n            ...project,\n            use_text: ((\"pr_node_\" + i === e.target.id() && project.description != undefined) ? project.title + \"\\n\" + project.description : project.title),\n            opacity: ((\"pr_node_\" + i === e.target.id()) ? 1 : 0.5)\n          }\n        })\n      )\n    }\n    else if (e.target.id().includes(\"sp_node_\")) {\n      setStProjects(\n        st_projects.map((project, i) => {\n          return {\n            ...project,\n            sprints: project.sprints.map((sprint, j) => {\n              return {\n                ...sprint,\n                use_text: ((\"sp_node_\" + i + \"_\" + j === e.target.id() && sprint.description != undefined) ? sprint.title + \"\\n\" + sprint.description : sprint.title),\n                opacity: ((\"sp_node_\" + i + \"_\" + j === e.target.id()) ? 1 : 0.5)\n              }\n            })\n          }\n        })\n      )\n    }\n    else if (e.target.id().includes(\"td_node_\")) {\n      setStProjects(\n        st_projects.map((project, i) => {\n          return {\n            ...project,\n            sprints: project.sprints.map((sprint, j) => {\n              return {\n                ...sprint,\n                todos: sprint.todos.map((todo, k) => {\n                  return {\n                    ...todo,\n                    use_text: ((\"td_node_\" + i + \"_\" + j + \"_\" + k === e.target.id() && todo.description != undefined) ? todo.title + \"\\n\" + todo.description : todo.title),\n                    opacity: ((\"td_node_\" + i + \"_\" + j + \"_\" + k === e.target.id()) ? 1 : 0.5)\n                  }\n                })\n              }\n            })\n          }\n        })\n      )\n    }\n\n  }\n  const hideNodeText = (e) => {\n    setTimeout((i) => {\n      setStProjects(\n        st_projects.map((project, i) => {\n          return {\n            ...project,\n            use_text: project.title,\n            opacity: 0.5,\n            sprints: project.sprints.map((sprint, j) => {\n              return {\n                ...sprint,\n                use_text: sprint.title,\n                opacity: 0.5,\n                todos: sprint.todos.map((to_do, k) => {\n                  return {\n                    ...to_do,\n                    use_text: to_do.title,\n                    opacity: 0.5,\n                  }\n                })\n              }\n            })\n          }\n        })\n      )\n    },\n      3000)\n  }\n\n\n  const handleWheel = (e) => {\n    e.evt.preventDefault();\n\n    const scaleBy = 1.02;\n    const stage = e.target.getStage();\n    const oldScale = stage.scaleX();\n    const mousePointTo = {\n      x: stage.getPointerPosition().x / oldScale - stage.x() / oldScale,\n      y: stage.getPointerPosition().y / oldScale - stage.y() / oldScale\n    };\n\n    const newScale = e.evt.deltaY < 0 ? oldScale * scaleBy : oldScale / scaleBy;\n\n    setStNavigation({\n      ...st_navigation,\n      scale: newScale,\n      x: (stage.getPointerPosition().x / newScale - mousePointTo.x) * newScale,\n      y: (stage.getPointerPosition().y / newScale - mousePointTo.y) * newScale\n    });\n  };\n\n  /* RETURN THE ACTUAL HTML ELEMENTS WE NEED */\n  return (\n    /* OUR KONVA \"CANVAS\" */\n    <Stage\n      width={window.innerWidth}\n      height={window.innerHeight - 50}\n      onWheel={handleWheel}\n      draggable={true}\n      onDragStart={(e) => { }}\n      onDragEnd={(e) => { }}\n      scaleX={st_navigation.scale}\n      scaleY={st_navigation.scale}\n      x={st_navigation.x}\n      y={st_navigation.y}\n      style={{ background: design_params['colours']['background'] }}\n    >\n      {/* LAYOUT CIRCLES AND LABELS */}\n      <Layer id=\"LAYOUT\">\n        {labels.map((label, i) => (\n          <Circle\n            key={\"lb_circle_\" + i}\n            id={\"lb_circle_\" + i}\n            x={design_params[\"core\"][\"x_c\"]}\n            y={design_params[\"core\"][\"y_c\"]}\n            radius={design_params[\"design\"][\"spacing\"] * (i + 1)}\n            stroke=\"black\"\n          />))\n        }\n        {labels.map((label, i) => (\n          <Text\n            key={\"lb_text_\" + i}\n            id={\"lb_text_\" + i}\n            x={design_params[\"core\"][\"x_c\"] + polarToCartesian(3 + design_params[\"design\"][\"spacing\"] * (i + 1), design_params[\"design\"][\"label_angle\"])[0]}\n            y={design_params[\"core\"][\"y_c\"] + polarToCartesian(3 + design_params[\"design\"][\"spacing\"] * (i + 1), design_params[\"design\"][\"label_angle\"])[1]}\n            text={labels[i]}\n            fontSize={10}\n            fill=\"#6666ff\" />\n        )\n        )}\n        {\n          <Text\n            x={design_params[\"core\"][\"x_c\"] - (design_params[\"design\"][\"spacing\"] * 3 / 4)}\n            y={design_params[\"core\"][\"y_c\"] - (design_params[\"design\"][\"spacing\"] * 3 / 4)}\n            verticalAlign=\"middle\"\n            align=\"center\"\n            width={design_params[\"design\"][\"spacing\"] * 3 / 2}\n            height={design_params[\"design\"][\"spacing\"] * 3 / 2}\n            text={use_data[\"conviction\"]}\n            fontSize={10}\n            fill=\"#6666ff\"\n          />\n        }\n      </Layer>\n      <Layer id=\"PROJECTS\">\n        {st_projects.map((project, i) => {\n          /* SPRINTS VARS */\n          const sp_angle = design_params[\"design\"][\"sprints_angle\"];\n\n          /* TO-DO VARS */\n          const to_do_angle = design_params[\"design\"][\"todos_angle\"];\n\n          let startPoint = polarToCartesian(design_params[\"design\"][\"spacing\"], design_params[\"design\"][\"projects_angle\"] * i / st_projects.length);\n\n          /* PROJECTS LINES, NODES, AND TEXT */\n          let project_features = ([\n            <Line\n              key={\"pr_line_\" + i}\n              id={\"pr_line_\" + i}\n              x={design_params[\"core\"][\"x_c\"] + startPoint[0]}\n              y={design_params[\"core\"][\"y_c\"] + startPoint[1]}\n              points={[\n                0,\n                0,\n                startPoint[0],\n                startPoint[1]]}\n              tension={0.5}\n              stroke=\"black\"\n            />,\n            <Circle\n              key={\"pr_node_\" + i}\n              id={\"pr_node_\" + i}\n              x={design_params[\"core\"][\"x_c\"] + startPoint[0] * 2}\n              y={design_params[\"core\"][\"y_c\"] + startPoint[1] * 2}\n              radius={4}\n              fill=\"#0\"\n              onmouseenter={showNodeText}\n              onmouseleave={hideNodeText}\n            />,\n            <Text\n              key={\"pr_text_\" + i}\n              id={\"pr_text_\" + i}\n              x={design_params[\"core\"][\"x_c\"] + startPoint[0] * 2}\n              y={design_params[\"core\"][\"y_c\"] + startPoint[1] * 2}\n              text={project.use_text}\n              wrap=\"word\"\n              width={300}\n              fill=\"#333388\"\n              opacity={project.opacity}\n            />\n          ])\n\n          /* SPRINTS LINES, NODES, AND TEXT */\n          let sprint_features = project.sprints.map((sprint, j) => {\n            let this_project_angle = design_params[\"design\"][\"projects_angle\"] * i / st_projects.length;\n            let this_sprint_angle = sp_angle * (j - ((project.sprints.length - 1) / 2)) / project.sprints.length;\n            let startPoint = polarToCartesian(design_params[\"design\"][\"spacing\"] * 2, this_project_angle);\n            let endPoint = polarToCartesian(design_params[\"design\"][\"spacing\"] * 3, this_project_angle + this_sprint_angle);\n\n            let sprint_int_features =\n              [\n                <Line\n                  key={\"sp_line_\" + i + \"_\" + j}\n                  id={\"sp_line_\" + i + \"_\" + j}\n                  x={design_params[\"core\"][\"x_c\"]}\n                  y={design_params[\"core\"][\"y_c\"]}\n                  points={[\n                    startPoint[0],\n                    startPoint[1],\n                    endPoint[0],\n                    endPoint[1]\n                  ]}\n                  tension={0.5}\n                  stroke=\"black\"\n                />,\n                <Circle\n                  key={\"sp_node_\" + i + \"_\" + j}\n                  id={\"sp_node_\" + i + \"_\" + j}\n                  x={design_params[\"core\"][\"x_c\"] + endPoint[0]}\n                  y={design_params[\"core\"][\"y_c\"] + endPoint[1]}\n                  radius={4}\n                  fill=\"#0\"\n                  onmouseenter={showNodeText}\n                  onmouseleave={hideNodeText}\n                />,\n                <Text\n                  key={\"sp_text_\" + i + \"_\" + j}\n                  id={\"sp_text_\" + i + \"_\" + j}\n                  x={design_params[\"core\"][\"x_c\"] + endPoint[0]}\n                  y={design_params[\"core\"][\"y_c\"] + endPoint[1]}\n                  radius={4}\n                  text={sprint.use_text}\n                  opacity={sprint.opacity}\n                  wrap=\"word\"\n                  width={300}\n                  fill=\"#333388\"\n                />\n              ];\n\n            /* TO-DO LINES, NODES, AND TEXT */\n            let todo_features = sprint.todos.map((to_do, k) => {\n              let this_to_do_angle = to_do_angle * (k - ((sprint.todos.length - 1) / 2)) / sprint.todos.length;\n              let startPoint = polarToCartesian(design_params[\"design\"][\"spacing\"] * 3, this_project_angle + this_sprint_angle);\n              let endPoint = polarToCartesian(design_params[\"design\"][\"spacing\"] * 4, this_project_angle + this_sprint_angle + this_to_do_angle);\n              return (\n                [\n                  <Line\n                    key={\"td_line_\" + i + \"_\" + j + \"_\" + k}\n                    id={\"td_line_\" + i + \"_\" + j + \"_\" + k}\n                    x={design_params[\"core\"][\"x_c\"]}\n                    y={design_params[\"core\"][\"y_c\"]}\n                    points={[\n                      startPoint[0],\n                      startPoint[1],\n                      endPoint[0],\n                      endPoint[1]\n                    ]}\n                    tension={0.5}\n                    stroke=\"black\"\n                  />,\n                  <Circle\n                    key={\"td_node_\" + i + \"_\" + j + \"_\" + k}\n                    id={\"td_node_\" + i + \"_\" + j + \"_\" + k}\n                    x={design_params[\"core\"][\"x_c\"] + endPoint[0]}\n                    y={design_params[\"core\"][\"y_c\"] + endPoint[1]}\n                    radius={4}\n                    fill=\"#0\"\n                    onmouseenter={showNodeText}\n                    onmouseleave={hideNodeText}\n                  />,\n                  <Text\n                    key={\"td_text_\" + i + \"_\" + j + \"_\" + k}\n                    id={\"td_text_\" + i + \"_\" + j + \"_\" + k}\n                    x={design_params[\"core\"][\"x_c\"] + endPoint[0]}\n                    y={design_params[\"core\"][\"y_c\"] + endPoint[1]}\n                    radius={4}\n                    text={to_do.use_text}\n                    opacity={to_do.opacity}\n                    wrap=\"word\"\n                    width={300}\n                    fill=\"#333388\"\n                  />\n                ]\n              )\n            })\n\n\n            return ([sprint_int_features, todo_features]);\n          })\n\n          return ([project_features, sprint_features])\n        })}\n      </Layer>\n    </Stage>\n  )\n};\n\nexport default SpiderCanvas;","import React from 'react';\nimport AirtableIntegration from './components/AirtableIntegration'\nimport SpiderCanvas from './components/SpiderCanvas';\nimport Airtable from 'airtable';\n\nvar populateUseData = async function populateUseData(longTermTable, sprintTable, todoTable) {\n    var useData = {\n        \"conviction\": \"\",\n        \"projects\": [], // .. {\"sprints\": [.. {\"todos\": []}]}\n        \"unassigned\": {\n            \"projects\": [],\n            \"sprints\": [],\n            \"todos\": []\n        }\n    }\n    await longTermTable.select().all().then(\n        (records) => {\n            for (let i = 0; i < records.length; i++) {\n                let project = records[i];\n                let fields = project._rawJson.fields;\n                let tmpProjDict = {};\n                tmpProjDict[\"id\"] = project.id;\n                tmpProjDict[\"title\"] = fields.Name;\n                tmpProjDict[\"description\"] = fields.Description;\n                tmpProjDict[\"sprints\"] = [];\n                useData.projects.push(tmpProjDict);\n            }\n        })\n        .catch(function () {\n            console.log(\"Oh dear, Projects/Long-terms failed..\");\n        });\n    await sprintTable.select().all().then(\n        (records) => {\n            for (let i = 0; i < records.length; i++) {\n                let sprint = records[i];\n                let fields = sprint._rawJson.fields;\n                if (Object.keys(fields).length === 0) {\n                    continue;\n                }\n                let tmpSprintDict = {};\n                tmpSprintDict[\"id\"] = sprint.id;\n                tmpSprintDict[\"title\"] = fields.Name;\n                tmpSprintDict[\"description\"] = fields.Notes;\n                tmpSprintDict[\"todos\"] = [];\n                useData.projects.find(project =>\n                    project.id === fields[\"Projects/long term goals\"][0]\n                )[\"sprints\"].push(tmpSprintDict);\n            }\n        })\n        .catch(function () {\n            console.log(\"Oh dear, Sprints failed..\");\n        });\n\n    await todoTable.select().all().then(\n        (records) => {\n            for (let i = 0; i < records.length; i++) {\n                let toDo = records[i];\n                let fields = toDo._rawJson.fields;\n                if (Object.keys(fields).length === 0) {\n                    continue;\n                }\n                let tmpToDoDict = {};\n                tmpToDoDict[\"id\"] = toDo.id;\n                tmpToDoDict[\"title\"] = fields.Name;\n                tmpToDoDict[\"description\"] = fields.Notes;\n                if (fields[\"Projects/long term goals (from Sprints)\"] === undefined) {\n                    useData.unassigned.todos.push(tmpToDoDict)\n                    continue;\n                } else if (fields[\"Projects/long term goals (from Sprints)\"].length === 0) {\n                    useData.unassigned.todos.push(tmpToDoDict)\n                    continue;\n                }\n                // for each project, check each sprint, then match this todo to it's sprint array.\n                useData.projects.find(project =>\n                    project.id === fields[\"Projects/long term goals (from Sprints)\"][0]\n                )[\"sprints\"].find(sprint =>\n                    sprint.id === fields[\"Sprints\"][0]\n                )[\"todos\"].push(tmpToDoDict)\n            }\n        })\n        .catch(function () {\n            console.log(\"Oh dear, Sprints failed..\");\n        });\n\n    return useData;\n}\n\nconst App = () => {\n    Airtable.configure({\n        endpointUrl: 'https://api.airtable.com',\n        apiKey: process.env.REACT_APP_AIRTABLE_TOKEN\n    });\n    var base = Airtable.base('appmuvlU8q5Y40LqG');\n    const [airtableData, setAirtableData] = React.useState([]);\n    React.useEffect(() => {\n        populateUseData(\n            base.table(\"Projects/long term goals\"),\n            base.table(\"Sprints\"),\n            base.table(\"To-dos\")).then(setAirtableData);\n    }, []);\n    console.log(airtableData);\n    return (\n        <div>\n            <AirtableIntegration />\n            <SpiderCanvas airtableData={airtableData}/>\n        </div>\n    )\n};\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}